----------------------------------------------------------------------------------------
Objectives
-----------------------------------------------------------------------------------------

This experiment is to extend the previous experiment E2: we will conduct the same experiment but use "Greedy-2,4" and "Greedy-2,1.5" algorithms. More context is provided in E2/README

In addition, we want to schedule job sequences with these benevolent functions: 1. combinations of elementary polynomial; 2. exponential function 
-----------------------------------------------------------------------------------------
Procedures
-----------------------------------------------------------------------------------------  

Most steps are merely repetitions of experiment E1, and we omit details here. There is plenty of useful information in E1/README. Therefore, we will treat E1 as a blackbox of the experiment, and use it abstractly.   

Create folders E2.1, E2.2, E2.3, E2.4, E2.5, E2.6, E2.7, E2.8, E2.9

Use different combinations of (a, b) and benevolent functions to do experiment E1. The location to store relevant files should be changed to E2.x

Use input files to reduce time of typing parameters since most input parameters will be the same

Example input file(First input of E2.1):
1
0.05
5
25
lambda y:y
100
Y

Put this input file 1.txt into folder E2.1/input and run this command in /MMIS to generate job sequence using this following command
./jobs_generator.py --batch --redir PUS1 --jl 400 < Experiment/E2/E2.1/input/1.txt

E2.1:
    a = 5 
    b = 25   
    f = y
E2.2: (Just Copy & Paste E1) 
    a = 5
    b = 25   
    f = y^2
E2.3:
    a = 5
    b = 25   
    f = y^3
E2.4:
    a = 4
    b = 100   
    f = y
E2.5:
    a = 4
    b = 100   
    f = y^2
E2.6:
    a = 4
    b = 100   
    f = y^3
E2.7:
    a = 1
    b = 125   
    f = y
E2.8:
    a = 1
    b = 125   
    f = y^2
E2.9:
    a = 1
    b = 125   
    f = y^3

Suggestions:

Few bash files that help speed up the process are placed in E2. Try to use them wisely to reduce labor.
Ideally, most jobs for this experiment are done by modifying and  running these bash files  
If any change happens to this experiment, ideally only these bash files and config needs to be changed accordingly

Steps to take for each sub-experiment:
1. update run1.sh, run2.sh and run3.sh
2. run run3.sh, run1.sh, run2.sh in this order in their appropriate directory
3. go to directory E2.x and run clip.py to see the result 

---------------------------------------------------------------------------------------
Result
---------------------------------------------------------------------------------------

No matter how p varies, all experiments exihibited near 1 competitive ratio and small variations over job base
as desired. However, figures from some results are higher than the others. I will list expected competitive 
ratio and variations of all experiments as below:

(a, b), f(x) of job base    Expected comp ratio     Variation over job base
(5, 25), f(y) = y           1.066                   0.0004
(5, 25), f(y) = y^2         1.092                   0.0009
(5, 25), f(y) = y^3         1.100                   0.0011
(4, 100), f(y) = y          1.092                   0.0018      
(4, 100), f(y) = y^2        1.124                   0.0030
(4, 100), f(y) = y^3        1.140                   0.0045
(1, 125), f(y) = y          1.105                   0.0025
(1, 125), f(y) = y^2        1.132                   0.0043
(1, 125), f(y) = y^3        1.148                   0.0065

By observation, we can see as the difference between lengths of jobs increases, expectation of 
competitive ratio and variation increase;
Also, as the degree of polynomial increases, expectation of competitive ratio and variation increase
